{"version":3,"sources":["util.js","Components/Products.js","Components/Filter.js","Components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","productItems","this","props","products","map","product","className","key","id","href","onClick","e","handleAddToCart","src","sku","alt","title","util","price","React","Component","Filter","count","value","sort","onChange","handleChangeSort","size","handleChangeSize","Basket","cartItems","length","console","log","item","handleRemoveFromCart","reduce","a","c","alert","App","state","filteredProducts","bind","fetch","then","res","json","data","setState","localStorage","getItem","JSON","parse","target","listProducts","b","filter","availableSizes","indexOf","productAlreadyInCart","forEach","push","setItem","stringify","ele","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.feebb599.chunk.js","sourcesContent":["export default {\n    formatCurrency: function (num) {\n        return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\n    }\n}","import React from 'react';\n\nimport util from \"../util\";\n\nexport default class Products extends React.Component {\n  \n\n  render(){\n    const productItems = this.props.products.map(product => (\n      <div className = 'col-md-4' key = {product.id}>\n\n        <div className = 'thumbnail text-center shadow-lg p-3 mb-5 bg-white rounded img-fluid  '>\n          <a href = {`#${product.id}`} onClick = {(e)=> this.props.handleAddToCart(e,product)}>\n            <img className='view overlay zoom' src ={ `/products/${product.sku}_2.jpg`} alt= {product.title} />\n            <p>\n              {product.title}\n            </p>\n            <div>\n                <b> {util.formatCurrency(product.price)} </b>\n                <button className ='btn btn-primary example hoverable' onClick = {(e)=> this.props.handleAddToCart(e,product)}> add to cart </button>\n                \n            </div>\n          </a>\n        </div>\n      </div>\n\n      )\n      )\n    \n\n\n  return (\n    <div className ='row'>\n      {productItems}\n      </div>\n    \n  )\n}\n}\n\n","import React from 'react';\n\n\n\nexport default class Filter extends React.Component {\n  \n\n  render(){\n\n  return (\n    <div className ='row'>\n    \n    <div className ='col-md-4'>\n    {this.props.count} products found.\n     </div>\n\n    <div className ='col-md-4'>\n      Order By\n      <label>\n        <select className='form-control' value={this.props.sort} \n        onChange ={this.props.handleChangeSort} >\n        <option value=''>select </option>\n         <option value='highest'>Highest to lowest </option>\n <option value='lowest'>lowest to Highest </option>\n </select>\n      </label>\n    </div>\n\n    <div className ='col-md-4'>\n Select Size\n      <label>\n        <select className='form-control' value={this.props.size} \n        onChange ={this.props.handleChangeSize} >\n        <option value=''>ALL </option>\n        <option value='S'>S</option>\n            <option value='XS'>XS </option>\n         <option value='M'>M</option>\n             <option value='L'>L </option>\n             <option value='XL'>XL </option>\n                 <option value='XXL'>XXL </option>\n </select>\n      </label>    </div>\n      </div>\n    \n  )\n}\n}\n\n","import React from 'react';\nimport util from \"../util\";\n\n\nexport default class Basket extends React.Component {\n  \n\n  render(){\n    const {cartItems} = this.props;\n    return (\n      <div className = 'alert alert-info'>\n       {(cartItems === 0) ? \"Basket is empty \" : <div > You have {cartItems.length} items in the Basket </div> }\n       {console.log(cartItems.count)}\n       {cartItems.length > 0 && \n          <div> \n          <ul>\n              {cartItems.map (item =>\n\n                <li>\n                <b> {item.title} </b>\n\n                X {item.count}\n                <button className ='btn btn-danger'\n                onClick = {(e)=> {this.props.handleRemoveFromCart(e,item)}}> X </button>\n</li>\n                )}\n          </ul>\n          Total: {util.formatCurrency(cartItems.reduce( (a,c) => a + c.price * c.count ,0) )}\n          </div>\n       }\n        <button className ='btn btn-primary' onClick = {() => alert('CheckOut to be implemented')}> Check Out </button>\n      </div>\n      );\n}}","import React from 'react';\nimport Products from './Components/Products';\nimport './App.css';\nimport Filter from './Components/Filter';\nimport Basket from './Components/Basket';\n\nclass App extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      filteredProducts : [],\n     products:[],\n     cartItems :[]\n         };\n    this.handleChangeSort = this.handleChangeSort.bind(this);\n    this.handleChangeSize = this.handleChangeSize.bind(this);\n        this.handleAddToCart = this.handleAddToCart.bind(this);\n            this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000/products').then(res => res.json()).then(data => this.setState ({products : data,\n      filteredProducts :data}));\n\n    if(localStorage.getItem('cartItems')){\n      this.setState({cartItems : JSON.parse(localStorage.getItem('cartItems'))})\n    }\n  }\n\n  handleChangeSort (e){\n    this.setState ({sort:e.target.value});\n    this.listProducts();\n  }\n\n\n  handleChangeSize (e){\n    this.setState ({size:e.target.value});\n    this.listProducts();\n  }\n  listProducts(){\n    this.setState(state => {\n      if(state.sort !=='')\n      {\n        state.products.sort((a,b)=> ((state.sort==='lowest') ? ((a.price > b.price) ? 1 : -1 ) : ( (a.price < b.price )? 1 : -1 ))) ;\n      }\n      else {\n        state.products.sort((a,b)=> (a.id < b.id) ? 1 :-1 );\n      }\n      if(state.size !== ''){\n        return{filteredProducts : state.products.filter(a=> \n          a.availableSizes.indexOf(state.size) >=0\n          )}\n      }\n\n      return{\n        filteredProducts : state.products\n      };\n    })\n  }\n\n  handleAddToCart (e,product){\nthis.setState (state => {\n const cartItems = state.cartItems;\n  let productAlreadyInCart = false;\n\n  cartItems.forEach((item) => {\n    if (item.id === product.id) {\n    \n      productAlreadyInCart = true;\n       item.count+=1;\n\n    }\n  });\n\n  if (!productAlreadyInCart) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\nreturn cartItems;\n\n\n})\n  }\n\n  handleRemoveFromCart(e,item){\n    this.setState(state => {\n\n      const cartItems = state.cartItems.filter(ele => ele.id !== item.id);\n      localStorage.setItem('cartItems',cartItems);\n      return{cartItems};\n    }\n\n    )\n  }\n\n  render(){\n  return (\n    <div className=\"container\">\n\n      <h1> Ecommerce shopping cart</h1>\n       <hr/>\n\n\n        <div className= 'row'>\n       <div className='col-md-8'>\n        <Filter size = {this.state.size} sort = {this.state.sort} handleChangeSize = {this.handleChangeSize} \n        handleChangeSort = {this.handleChangeSort} count = {this.state.filteredProducts.length} />\n       <hr/>\n        <Products products = {this.state.filteredProducts} handleAddToCart = {this.handleAddToCart} />\n       </div>\n\n        <div className = 'col-md-4'>\n          <Basket cartItems = {this.state.cartItems} handleRemoveFromCart = {this.handleRemoveFromCart} />\n        </div>\n      </div>\n    </div>\n  );}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}